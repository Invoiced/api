# Tax Rates

A tax rate describes a tax that customers should be charged. Tax rates can be applied to [invoices](#invoice-object), [line items](#line-item-object), and [subscriptions](#subscription-object).

## Tax Rate Object

### Attributes

```shell
<%= json data.tax_rates.object %>
```

```ruby
#<Invoiced::TaxRate:0x3fdbf95e4d08 id=vat> JSON: <%= json data.tax_rates.object %>
```

```php
Invoiced\TaxRate JSON: <%= json data.tax_rates.object %>
```

```python
<TaxRate id=vat at 0x3fdbf95e4d08> JSON: <%= json data.tax_rates.object %>
```

```java
com.invoiced.entity.TaxRate@192cafae JSON: <%= json data.tax_rates.object %>
```

```csharp
Invoiced.TaxRate<vat> <%= json data.tax_rates.object %>
```

Parameter | Type | Description
--------- | ---- | -----------
**id** | *string* | The tax rate's unique ID
**object** | *string* | Object type, `tax_rate`
**name** | *string* | Tax rate name
**currency** | *string* | [3-letter ISO code](https://en.wikipedia.org/wiki/ISO_4217)
**value** | *number* | Amount
**inclusive** | *boolean* | When true, pricing is calculated as tax-inclusive
**is_percent** | *boolean* | When true the value is a %
**created_at** | *timestamp* | Timestamp when created
**metadata** | *object* | A hash of key/value pairs that can store additional information about this object.

## Create a tax rate

```shell
curl "https://api.invoiced.com/tax_rates" \
  -u {API_KEY}: \
  -d id="vat" \
  -d name="VAT" \
  -d value=5 \
```

```ruby
invoiced.TaxRate.create(
  :id => "vat",
  :name => "VAT",
  :value => 5
)
```

```php
<?php

$invoiced->TaxRate->create([
  'id' => "vat",
  'name' => "VAT",
  'value' => 5
]);
```

```python
client.TaxRate.create(
  id="vat",
  name="VAT",
  value=5,
)
```

```java
TaxRate taxRate = invoiced.newTaxRate();
taxRate.id = "vat";
taxRate.name = "VAT";
taxRate.value = 5;
taxRate.create();
```

```csharp
var taxRate = invoiced.NewTaxRate();
taxRate.Id = "vat";
taxRate.Name = "VAT";
taxRate.Value = 5;
taxRate.Create();
```

> The above command returns JSON structured like this:

```shell
<%= json data.tax_rates.object %>
```

```ruby
#<Invoiced::TaxRate:0x3fdbf95e4d08 id=vat> JSON: <%= json data.tax_rates.object %>
```

```php
Invoiced\TaxRate JSON: <%= json data.tax_rates.object %>
```

```python
<TaxRate id=vat at 0x3fdbf95e4d08> JSON: <%= json data.tax_rates.object %>
```

```java
com.invoiced.entity.TaxRate@cb8fd57 JSON: <%= json data.tax_rates.object %>
```

```csharp
Invoiced.TaxRate<vat> <%= json data.tax_rates.object %>
```

Create a new tax rate with this endpoint.

### HTTP Request

`POST /tax_rates`

### Attributes

Parameter | Type | Description
--------- | ---- | -----------
**id** | *string* | The tax rate's unique ID
**name** | *string* | Tax rate name
**currency** | *string* | [3-letter ISO code](https://en.wikipedia.org/wiki/ISO_4217)
**value** | *number* | Amount
**inclusive** | *boolean* | When true, pricing is calculated as tax-inclusive
**is_percent** | *boolean* | When true the value is a %
**metadata** | *object* | A hash of key/value pairs that can store additional information about this object.

## Retrieve a tax rate

```shell
curl "https://api.invoiced.com/tax_rates/:id" \
  -u {API_KEY}:
```

```ruby
tax_rate = invoiced.TaxRate.retrieve("{TXRAT_ID}")
```

```php
<?php

$taxRate = $invoiced->TaxRate->retrieve("{TXRAT_ID}");
```

```python
tax_rate = client.TaxRate.retrieve("{TXRAT_ID}")
```

```java
TaxRate taxRate = invoiced.newTaxRate().retrieve({TXRAT_ID});
```

```csharp
var taxRate = invoiced.NewTaxRate().Retrieve({TXRAT_ID});
```

> The above command returns JSON structured like this:

```shell
<%= json data.tax_rates.object %>
```

```ruby
#<Invoiced::TaxRate:0x3fdbf95e4d08 id=vat> JSON: <%= json data.tax_rates.object %>
```

```php
Invoiced\TaxRate JSON: <%= json data.tax_rates.object %>
```

```python
<TaxRate id=vat at 0x3fdbf95e4d08> JSON: <%= json data.tax_rates.object %>
```

```java
com.invoiced.entity.TaxRate@cb8fd57 JSON: <%= json data.tax_rates.object %>
```

```csharp
Invoiced.TaxRate<vat> <%= json data.tax_rates.object %>
```

This endpoint retrieves a specific tax rate.

### HTTP Request

`GET /tax_rates/:id`

## Update a tax rate

```shell
curl "https://api.invoiced.com/tax_rates/:id" \
  -u {API_KEY}: \
  -X PATCH \
  -d name="GST"
```

```ruby
tax_rate.name = "GST"
tax_rate.save
```

```php
<?php

$taxRate->name = "GST";
$taxRate->save();
```

```python
tax_rate.name = "GST"
tax_rate.save()
```

```java
taxRate.name = "GST";
taxRate.save();
```

```csharp
taxRate.Name = "GST";
taxRate.SaveAll();
```

> The above command returns JSON structured like this:

```shell
<%= json data.tax_rates._update %>
```

```ruby
#<Invoiced::TaxRate:0x3fdbf95e4d08 id=vat> JSON: <%= json data.tax_rates._update %>
```

```php
Invoiced\TaxRate JSON: <%= json data.tax_rates._update %>
```

```python
<TaxRate id=vat at 0x3fdbf95e4d08> JSON: <%= json data.tax_rates._update %>
```

```java
com.invoiced.entity.TaxRate@cb8fd57 JSON: <%= json data.tax_rates._update %>
```

```csharp
Invoiced.TaxRate<vat> <%= json data.tax_rates._update %>
```

Use this endpoint to update a tax rate.

The properties that can be updated via this endpoint are limited. For other updates, it is necessary to delete and recreate the tax rate.

### HTTP Request

`PATCH /tax_rates/:id`

### Attributes

Parameter | Type | Description
--------- | ---- | -----------
**name** | *string* | Tax rate name
**metadata** | *object* | A hash of key/value pairs that can store additional information about this object.

## Delete a tax rate

```shell
curl "https://api.invoiced.com/tax_rates/:id" \
  -u {API_KEY}: \
  -X DELETE
```

```ruby
tax_rate.delete
```

```php
<?php

$taxRate->delete();
```

```python
tax_rate.delete()
```

```java
taxRate.delete();
```

```csharp
taxRate.Delete();
```

> The above command returns `204 No Content`

This endpoint deletes a specific tax rate.

### HTTP Request

`DELETE /tax_rates/:id`

## List all tax rates

```shell
curl "https://api.invoiced.com/tax_rates" \
  -u {API_KEY}:
```

```ruby
tax_rates, metadata = invoiced.TaxRate.list(:per_page => 3)
```

```php
<?php

list($taxRate, $metadata) = $invoiced->TaxRate->all(['per_page' => 3]);
```

```python
tax_rates, metadata = invoiced.TaxRate.list(per_page=3)
```

```java
EntityList<TaxRate> taxRates = conn.newTaxRate().listAll();
```

```csharp
var taxRates = invoiced.NewTaxRate().ListAll();
```

> The above command returns JSON structured like this:

```shell
[
  <%= json data.tax_rates.object, 1 %>
]
```

```ruby
[
  #<Invoiced::TaxRate:0x3fdbf95e4d08 id=vat> JSON: <%= json data.tax_rates.object, 1 %>
]
```

```php
[
  Invoiced\TaxRate JSON: <%= json data.tax_rates.object, 1 %>
]
```

```python
[
  <TaxRate id=vat at 0x3fdbf95e4d08> JSON: <%= json data.tax_rates.object, 1 %>
]
```

```java
[
  com.invoiced.entity.TaxRate@c509a57 JSON: <%= json data.tax_rates.object, 1 %>
]
```

```csharp
[
  Invoiced.TaxRate<vat> <%= json data.tax_rates.object, 1 %>
]
```

This endpoint retrieves all tax rates.

### HTTP Request

`GET /tax_rates`

### Query Parameters

Parameter | Description
--------- | -----------
**sort** *string* | Column to sort by, i.e. `name asc`
**filter** *object* | Filter object
**updated_after** *timestamp* | Only gets records updated after the given timestamp