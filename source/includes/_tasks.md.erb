# Tasks

<aside class="info">
Tasks API is currently in beta and subject to change.
</aside>

Tasks are to-do items associated with collection efforts for a customer.

## Task Object

### Attributes

```shell
<%= json data.tasks.object %>
```

```ruby
#<Invoiced::Task:0x3fdbf95e4d08 id=788> JSON: <%= json data.tasks.object %>
```

```php
Invoiced\Task JSON: <%= json data.tasks.object %>
```

```python
<Task id=788 at 0x3fdbf95e4d08> JSON: <%= json data.tasks.object %>
```

```java
com.invoiced.entity.Task@3a0fa320 JSON: <%= json data.tasks.object %>
```

```csharp
Invoiced.Task<788> <%= json data.tasks.object %>
```

```go
<Task id=788 at 3a0fa320> JSON: <%= json data.tasks.object %>
```

Parameter | Type | Description
--------- | ---- | -----------
**id** | *integer* | The task's unique ID
**name** | *string* | Task name
**action** | *string* | Action type, one of `phone`, `letter`, `email`, `review`
**customer_id** | *integer* | Associated customer ID
**user_id** | *integer* | ID of user assigned to task
**due_date** | *timestamp* | Task due date
**complete** | *boolean* | Task complete?
**completed_date** | *timestamp* | Date task was marked complete
**completed_by_user_id** | *integer* | User ID who completed task
**chase_step_id** | *integer* | Chasing step ID that created task
**created_at** | *timestamp* | Timestamp when created
**updated_at** | *timestamp* | Timestamp when updated

## Create a task

```shell
curl "https://api.invoiced.com/tasks" \
  -u {API_KEY}: \
  -d customer_id=481594 \
  -d name="Call customer" \
  -d action="phone" \
  -d due_date=1571288400 \
  -d user_id=1976

```

```ruby
customer = invoiced.Customer.retrieve("{CUSTOMER_ID}")
customer.tasks.create(
  :customer_id => 481594,
  :name => "Call customer",
  :action => "phone",
  :due_date => 1571288400,
  :user_id => 1976
)
```

```php
<?php

$customer = $invoiced->Customer->retrieve("{CUSTOMER_ID}");
$customer->tasks()->create([
  'customer_id' => 481594,
  'name' => "Call customer",
  'action' => "phone",
  'due_date' => 1571288400,
  'user_id' => 1976
]);
```

```python
customer = client.Customer.retrieve("{CUSTOMER_ID}")
customer.tasks().create(
  customer_id=481594,
  name="Call customer",
  action="phone",
  due_date=1571288400,
  user_id=1976
)
```

```java
Customer customer = invoiced.newCustomer().retrieve({CUSTOMER_ID});
Task task = customer.newTask();
task.customerId = 481594;
task.name = "Call customer";
task.action = "phone";
task.dueDate = 1571288400L;
task.userId = 1976L;
task.create();
```

```csharp
var customer = invoiced.NewCustomer().Retrieve({CUSTOMER_ID});
var task = customer.NewTask();
task.CustomerId = 481594;
task.Name = "Call customer";
task.Action = "phone";
task.DueDate = 1571288400;
task.UserId = 1976;
task.Create();
```

```go
task := invoiced.NewTask()
task.CustomerId = 481594
task.Name = "Call customer"
task.Action = "phone"
task.DueDate = 1571288400
task.UserId = 1976
task, err := task.Create(task)
```

> The above command returns JSON structured like this:

```shell
<%= json data.tasks.object %>
```

```ruby
#<Invoiced::Task:0x3fdbf95e4d08 id=788> JSON: <%= json data.tasks.object %>
```

```php
Invoiced\Task JSON: <%= json data.tasks.object %>
```

```python
<Task id=788 at 0x3fdbf95e4d08> JSON: <%= json data.tasks.object %>
```

```java
com.invoiced.entity.Task@cb8fd89 JSON: <%= json data.tasks.object %>
```

```csharp
Invoiced.Task<788> <%= json data.tasks.object %>
```

```go
<Task id=788 at 3a0fa320> JSON: <%= json data.tasks.object %>
```

Create a new task with this endpoint.

### HTTP Request

`POST /tasks`

### Attributes

Parameter | Type | Description
--------- | ---- | -----------
**name** | *string* | Task name
**action** | *string* | Action type, one of `phone`, `letter`, `email`, `review`
**customer_id** | *integer* | Associated customer ID
**user_id** | *integer* | ID of user assigned to task
**due_date** | *timestamp* | Task due date

## Retrieve a task

```shell
curl "https://api.invoiced.com/tasks/:id" \
  -u {API_KEY}:
```

```ruby
task = invoiced.Task.retrieve("{TASK_ID}")
```

```php
<?php

$task = $invoiced->Task->retrieve("{TASK_ID}");
```

```python
task = client.Task.retrieve("{TASK_ID}")
```

```java
Task task = conn.newTask().retrieve({TASK_ID});
```

```csharp
var task = invoiced.NewTask().Retrieve({TASK_ID});
```

```go
task, err := invoiced.NewTask().Retrieve({TASK_ID})
```

> The above command returns JSON structured like this:

```shell
<%= json data.tasks.object %>
```

```ruby
#<Invoiced::Task:0x3fdbf95e4d08 id=788> JSON: <%= json data.tasks.object %>
```

```php
Invoiced\Task JSON: <%= json data.tasks.object %>
```

```python
<Task id=788 at 0x3fdbf95e4d08> JSON: <%= json data.tasks.object %>
```

```java
com.invoiced.entity.Task@cb8fd89 JSON: <%= json data.tasks.object %>
```

```csharp
Invoiced.Task<788> <%= json data.tasks.object %>
```

```go
<Task id=788 at 3a0fa320> JSON: <%= json data.tasks.object %>
```

This endpoint retrieves a specific task.

### HTTP Request

`GET /tasks/:id`

## Update a task

```shell
curl "https://api.invoiced.com/tasks/:id" \
  -u {API_KEY}: \
  -d due_date=1587366000 \
  -X PATCH
```

```ruby
task.due_date = 1587366000
task.save
```

```php
<?php

task->due_date = 1587366000;
$task->save();
```

```python
task.due_date = 1587366000
task.save()
```

```java 
task.dueDate = 1587366000;
task.save()
```

```csharp
task.DueDate = 1587366000;
task.SaveAll();
```

```go
task.DueDate = 1587366000
err := task.Save()
```

> The above command returns JSON structured like this:

```shell
<%= json data.tasks._update %>
```

```ruby
#<Invoiced::Task:0x3fdbf95e4d08 id=788> JSON: <%= json data.tasks._update %>
```

```php
Invoiced\Task JSON: <%= json data.tasks._update %>
```

```python
<Task id=788 at 0x3fdbf95e4d08> JSON: <%= json data.tasks._update %>
```

```java
com.invoiced.entity.Task@cb8fd89 JSON: <%= json data.tasks._update %>
```

```csharp
Invoiced.Task<788> <%= json data.tasks._update %>
```

```go
<Task id=788 at cb8fd89> JSON: <%= json data.tasks._update %>
```

Use this endpoint to update a task.

### HTTP Request

`PATCH /tasks/:id`

### Request Parameters

Parameter | Type | Description
--------- | ---- | -----------
**name** | *string* | Task name
**action** | *string* | Action type, one of `phone`, `letter`, `email`, `review`
**user_id** | *integer* | ID of user assigned to task
**due_date** | *timestamp* | Task due date

## Delete a task

```shell
curl "https://api.invoiced.com/tasks/:id" \
  -u {API_KEY}: \
  -X DELETE
```

```ruby
task.delete
```

```php
<?php

$task->delete();
```

```python
task.delete()
```

```java
task.delete();
```

```csharp
task.Delete();
```

```go
err := task.Delete()
```

> The above command returns `204 No Content`

This endpoint deletes a specific task.

### HTTP Request

`DELETE /tasks/:id`

## List all tasks

```shell
curl "https://api.invoiced.com/tasks" \
  -u {API_KEY}:
```

```ruby
tasks, metadata = invoiced.Task.list(:per_page => 3)
```

```php
<?php

list($tasks, $metadata) = $invoiced->Task->all(['per_page' => 3]);
```

```python
tasks, metadata = invoiced.Task.list(per_page=3)
```

```java
EntityList<Task> tasks = conn.newTask().listAll();
```

```csharp
var tasks = invoiced.NewTask().ListAll();
```

```go
tasks, err := invoiced.NewTask().ListAll(nil, nil)
```

> The above command returns JSON structured like this:

```shell
[
  <%= json data.tasks._update, 1 %>
]
```

```ruby
[
  #<Invoiced::Task:0x3fdbf95e4d08 id=788> JSON: <%= json data.tasks._update, 1 %>
]
```

```php
[
  Invoiced\Task JSON: <%= json data.tasks._update, 1 %>
]
```

```python
[
  <Task id=788 at 0x3fdbf95e4d08> JSON: <%= json data.tasks._update, 1 %>
]
```

```java
[
  com.invoiced.entity.Task@1701e31a JSON: <%= json data.tasks._update, 1 %>
]
```

```csharp
[
  Invoiced.Task<788> <%= json data.tasks._update, 1 %>
]
```

```go
[
  <Task id=788 at 1701e31a> JSON: <%= json data.tasks._update, 1 %>
]
```

This endpoint retrieves all tasks.

### HTTP Request

`GET /tasks`

### Query Parameters

Parameter | Description
--------- | -----------
**sort** *string* | Column to sort by, i.e. `name asc`
**filter** *object* | Filter object
