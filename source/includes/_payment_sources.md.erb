# Payment Sources

A payment source represents a specific payment instrument owned by a customer that can be used for payments. We currently support credit cards and bank accounts as payment sources.

## Card Object

### Attributes

```shell
<%= json data.sources.cards.object %>
```

```ruby
#<Invoiced::Card:0x3fdbf95e4d08 id=850> JSON: <%= json data.sources.cards.object %>
```

```php
Invoiced\Card JSON: <%= json data.sources.cards.object %>
```

```python
<Card id=850 at 0x3fdbf95e4d08> JSON: <%= json data.sources.cards.object %>
```

```java
//PaymentSource can be used for both Card Object and Bank Account Object
com.invoiced.entity.PaymentSource@2fdf31f4 JSON: <%= json data.sources.cards.object %>
```

Parameter | Type | Description
--------- | ---- | -----------
**id** | *integer* | The card's unique ID
**object** | *string* | Object type, `card`
**brand** | *string* | Card brand
**last4** | *string* | Last 4 digits of card
**exp_month** | *integer* | Expiry month
**exp_year** | *integer* | Expiry year
**funding** | *string* | Funding instrument, can be `credit`, `debit`, `prepaid`, or `unknown`

## Bank Account Object

### Attributes

```shell
<%= json data.sources.bank_accounts.object %>
```

```ruby
#<Invoiced::BankAccount:0x3fdbf95e4d08 id=4321> JSON: <%= json data.sources.bank_accounts.object %>
```

```php
Invoiced\BankAccount JSON: <%= json data.sources.bank_accounts.object %>
```

```python
<BankAccount id=4321 at 0x3fdbf95e4d08> JSON: <%= json data.sources.bank_accounts.object %>
```

```java
//PaymentSource can be used for both Card Object and Bank Account Object
com.invoiced.entity.PaymentSource@3fdf31f4 JSON: <%= json data.sources.bank_accounts.object %>
```

Parameter | Type | Description
--------- | ---- | -----------
**id** | *integer* | The bank account's unique ID
**object** | *string* | Object type, `bank_account`
**bank_name** | *string* | Bank name
**last4** | *string* | Last 4 digits of bank account
**routing_number** | *string* | Bank routing number
**verified** | *boolean* | Whether the bank account has been verified with instant verification or micro-deposits
**currency** | *string* | [3-letter ISO code](https://en.wikipedia.org/wiki/ISO_4217)

## Create a payment source

```shell
curl "https://api.invoiced.com/customers/:id/payment_sources" \
  -u {API_KEY}: \
  -d method="card" \
  -d invoiced_token="abcdefghijklmnopqrstuvwxyz"
```

```ruby
customer = invoiced.Customer.retrieve("{CUSTOMER_ID}")
customer.payment_sources.create(
  :method => "card",
  :invoiced_token="abcdefghijklmnopqrstuvwxyz"
)
```

```php
<?php

$customer = $invoiced->Customer->retrieve("{CUSTOMER_ID}");
$customer->paymentSources()->create([
  'method' => "card",
  'invoiced_token' => "abcdefghijklmnopqrstuvwxyz"
]);
```

```python
customer = client.Customer.retrieve("{CUSTOMER_ID}")
customer.payment_sources().create(
  method="card",
  invoiced_token="abcdefghijklmnopqrstuvwxyz"
)
```

```java
Customer customer = invoiced.newCustomer().retrieve({CUSTOMER_ID});
PaymentSource paymentSource = customer.newPaymentSource();
paymentSource.method = "card";
paymentSource.invoicedToken = "abcdefghijklmnopqrstuvwxyz";
paymentSource.create();
```

> The above command returns JSON structured like this:

```shell
<%= json data.sources.cards.object %>
```

```ruby
#<Invoiced::Card:0x3fdbf95e4d08 id=850> JSON: <%= json data.sources.cards.object %>
```

```php
Invoiced\Card JSON: <%= json data.sources.cards.object %>
```

```python
<Card id=850 at 0x3fdbf95e4d08> JSON: <%= json data.sources.cards.object %>
```

```java
com.invoiced.entity.Card@e48fa2a JSON: <%= json data.sources.cards.object %>
```

Associate a payment method with a customer using this endpoint.

Either `invoiced_token` or `gateway_token` is required, but not both.

### HTTP Request

`POST /customers/:id/payment_sources`

### Attributes

Parameter | Type | Description
--------- | ---- | -----------
**method** | *string* | Payment method, i.e. `card`, `ach`
**make_default** | *boolean* | When true, makes the payment source the default
**invoiced_token** | *string* | Optional, generated by `invoiced.js`
**gateway_token** | *string* | Optional, generated by payment gateaway

## Retrieve payment sources

```shell
curl "https://api.invoiced.com/customers/:customer_id/payment_sources" \
  -u {API_KEY}
```

```ruby
customer = invoiced.Customer.retrieve("{CUSTOMER_ID}")
payment_source = customer.payment_sources.list(:per_page => 3)
```

```php
<?php

$customer = $invoiced->Customer->retrieve("{CUSTOMER_ID}");
$paymentSource = $customer->paymentSources()->all(['per_page' => 3]);
```

```python
customer = client.Customer.retrieve("{CUSTOMER_ID}")
payment_source = customer.payment_sources().list(per_page=3)
```

```java
Customer customer = invoiced.newCustomer().retrieve({CUSTOMER_ID});
PaymentSource paymentSource = customer.newPaymentSource().listAll();
```

> The above command returns JSON structured like this:

```shell
[
  <%= json data.sources.cards.object, 1 %>
]
```

```ruby
[
  #<Invoiced::Card:0x3fdbf95e4d08 id=850> JSON: <%= json data.sources.cards.object, 1 %>
]
```

```php
[
  Invoiced\Card JSON: <%= json data.sources.cards.object, 1 %>
]
```

```python
[
  <Card id=850 at 0x3fdbf95e4d08> JSON: <%= json data.sources.cards.object, 1 %>
]
```

```java
[
  com.invoiced.entity.Card@e48fa2a JSON: <%= json data.sources.cards.object, 1 %>
]
```

Retrieve payment sources associated with a certain customer using this endpoint.

### HTTP Request

`GET /customers/:customer_id/payment_sources`

## Delete a payment source

```shell
curl "https://api.invoiced.com/customers/:customer_id/cards/:id" \
  -u {API_KEY}: \
  -X DELETE
```

```ruby
payment_source.delete
```

```php
<?php

$paymentSource->delete();
```

```python
payment_source.delete()
```

```java
paymentSource.delete();
```

> The above command returns `204 No Content`

This endpoint deletes a specific payment source. The endpoint differs by type.

### HTTP Request

`DELETE /customers/:customer_id/cards/:id` or

`DELETE /customers/:customer_id/bank_accounts/:id`