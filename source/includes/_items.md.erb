# Items

An item represents a product or service that you sell. Items can be used to generate [line items](#line-item-object) and can also be used by [plans](#plan-object).

## Item Object

### Attributes

```shell
<%= json data.items.object %>
```

```ruby
#<Invoiced::CatalogItem:0x3fdbf95e4d08 id=delivery> JSON: <%= json data.items.object %>
```

```php
Invoiced\Item JSON: <%= json data.items.object %>
```

```python
<CatalogItem id=delivery at 0x3fdbf95e4d08> JSON: <%= json data.items.object %>
```

```java
com.invoiced.entity.CatalogItem@192cafae JSON: <%= json data.items.object %>
```

```csharp
Invoiced.CatalogItem<delivery> <%= json data.items.object %>
```

```go
<CatalogItem id=delivery at 192cafae> JSON: <%= json data.items.object %>
```

Parameter | Type | Description
--------- | ---- | -----------
**id** | *string* | The item's unique ID
**object** | *string* | Object type, `item`
**name** | *string* | Item name
**currency** | *string* | [3-letter ISO code](https://en.wikipedia.org/wiki/ISO_4217)
**unit_cost** | *number* | Unit cost or rate
**description** | *string* | Optional description
**type** | *string* | Optional line item type. Used to group line items by type in reporting
**taxable** | *boolean* | Excludes amount from taxes when `false`
**taxes** | *array* | Collection of Tax Rate Objects
**avalara_tax_code** | *string* | [Avalara-specific tax code](https://taxcode.avatax.avalara.com/)
**avalara_location_code** | *string* | Optional Avalara location code
**gl_account** | *string* | General ledger account code
**discountable** | *boolean* | Excludes amount from discounts when `false`
**created_at** | *timestamp* | Timestamp when created
**metadata** | *object* | A hash of key/value pairs that can store additional information about this object.

## Create an item

```shell
curl "https://api.invoiced.com/catalog_items" \
  -u {API_KEY}: \
  -d id="delivery" \
  -d name="Delivery" \
  -d type="service" \
  -d unit_cost=100
```

```ruby
invoiced.CatalogItem.create(
  :id => "delivery",
  :name => "Delivery",
  :type => "service",
  :unit_cost => 100
)
```

```php
<?php

$invoiced->Item->create([
  'id' => "delivery",
  'name' => "Delivery",
  'type' => "service",
  'unit_cost' => 100
]);
```

```python
client.CatalogItem.create(
  id="delivery",
  name="Delivery",
  type="service",
  unit_cost=100
)
```

```java
CatalogItem item = invoiced.newCatalogItem();
item.id = "delivery";
item.name = "Delivery";
item.type = "service";
item.unitCost = 100;
item.create();
```

```csharp
var item = invoiced.NewCatalogItem();
item.Id = "delivery";
item.Name = "Delivery";
item.Type = "service";
item.UnitCost = 100;
item.Create();
```

```go
item := invoiced.NewCatalogItem()
item.Id = "delivery"
item.Name = "Delivery"
item.Type = "service"
item.UnitCost = 100
item, err := item.Create(item)
```

> The above command returns JSON structured like this:

```shell
<%= json data.items.object %>
```

```ruby
#<Invoiced::CatalogItem:0x3fdbf95e4d08 id=delivery> JSON: <%= json data.items.object %>
```

```php
Invoiced\Item JSON: <%= json data.items.object %>
```

```python
<CatalogItem id=delivery at 0x3fdbf95e4d08> JSON: <%= json data.items.object %>
```

```java
com.invoiced.entity.CatalogItem@cb8fd57 JSON: <%= json data.items.object %>
```

```csharp
Invoiced.CatalogItem<delivery> <%= json data.items.object %>
```

```go
<CatalogItem id=delivery at cb8fd57> JSON: <%= json data.items.object %>
```

Create a new item with this endpoint.

### HTTP Request

`POST /catalog_items`

### Attributes

Parameter | Type | Description
--------- | ---- | -----------
**id** | *string* | The item's unique ID
**name** | *string* | Item name
**currency** | *string* | [3-letter ISO code](https://en.wikipedia.org/wiki/ISO_4217)
**unit_cost** | *number* | Unit cost or rate
**description** | *string* | Optional description
**type** | *string* | Optional line item type. Used to group line items by type in reporting
**taxable** | *boolean* | Excludes amount from taxes when `false`
**avalara_tax_code** | *string* | [Avalara-specific tax code](https://taxcode.avatax.avalara.com/)
**avalara_location_code** | *string* | Optional Avalara location code
**gl_account** | *string* | General ledger account code
**discountable** | *boolean* | Excludes amount from discounts when `false`
**metadata** | *object* | A hash of key/value pairs that can store additional information about this object.

## Retrieve an item

```shell
curl "https://api.invoiced.com/catalog_items/:id" \
  -u {API_KEY}:
```

```ruby
item = invoiced.CatalogItem.retrieve("{CITEM_ID}")
```

```php
<?php

$item = $invoiced->Item->retrieve("{CITEM_ID}");
```

```python
item = client.CatalogItem.retrieve("{CITEM_ID}")
```

```java
CatalogItem item = invoiced.newCatalogItem().retrieve({CITEM_ID});
```

```csharp
var item = invoiced.NewCatalogItem().Retrieve({CITEM_ID});
```

```go
item, err := invoiced.NewCatalogItem().Retrieve({CITEM_ID})
```

> The above command returns JSON structured like this:

```shell
<%= json data.items.object %>
```

```ruby
#<Invoiced::CatalogItem:0x3fdbf95e4d08 id=delivery> JSON: <%= json data.items.object %>
```

```php
Invoiced\Item JSON: <%= json data.items.object %>
```

```python
<CatalogItem id=delivery at 0x3fdbf95e4d08> JSON: <%= json data.items.object %>
```

```java
com.invoiced.entity.CatalogItem@cb8fd57 JSON: <%= json data.items.object %>
```

```csharp
Invoiced.CatalogItem<delivery> <%= json data.items.object %>
```

```go
<CatalogItem id=delivery at cb8fd57> JSON: <%= json data.items.object %>
```

This endpoint retrieves a specific item.

### HTTP Request

`GET /catalog_items/:id`

## Update an item

```shell
curl "https://api.invoiced.com/catalog_items/:id" \
  -u {API_KEY}: \
  -X PATCH \
  -d type="product"
```

```ruby
item.type = "product"
item.save
```

```php
<?php

item->type = "product";
$item->save();
```

```python
item.type = "product"
item.save()
```

```java
item.type = "product";
item.save();
```

```csharp
item.Type = "product";
item.SaveAll();
```

```go
item.Type = "product"
err := item.Save()
```

> The above command returns JSON structured like this:

```shell
<%= json data.items._update %>
```

```ruby
#<Invoiced::CatalogItem:0x3fdbf95e4d08 id=delivery> JSON: <%= json data.items._update %>
```

```php
Invoiced\Item JSON: <%= json data.items._update %>
```

```python
<CatalogItem id=delivery at 0x3fdbf95e4d08> JSON: <%= json data.items._update %>
```

```java
com.invoiced.entity.CatalogItem@cb8fd57 JSON: <%= json data.items._update %>
```

```csharp
Invoiced.CatalogItem<delivery> <%= json data.items._update %>
```

```go
<CatalogItem id=delivery at cb8fd57> JSON: <%= json data.items._update %>
```

Use this endpoint to update an item.

The properties that can be updated via this endpoint are limited. For other updates, it is necessary to delete and recreate the item.

### HTTP Request

`PATCH /catalog_items/:id`

### Attributes

Parameter | Type | Description
--------- | ---- | -----------
**name** | *string* | Item name
**description** | *string* | Optional description
**type** | *string* | Optional line item type. Used to group line items by type in reporting
**metadata** | *object* | A hash of key/value pairs that can store additional information about this object.

## Delete an item

```shell
curl "https://api.invoiced.com/catalog_items/:id" \
  -u {API_KEY}: \
  -X DELETE
```

```ruby
item.delete
```

```php
<?php

$item->delete();
```

```python
item.delete()
```

```java
item.delete();
```

```csharp
item.Delete();
```

```go
err := item.Delete()
```

> The above command returns `204 No Content`

This endpoint deletes a specific item.

### HTTP Request

`DELETE /catalog_items/:id`

## List all items

```shell
curl "https://api.invoiced.com/catalog_items" \
  -u {API_KEY}:
```

```ruby
items, metadata = invoiced.CatalogItem.list(:per_page => 3)
```

```php
<?php

list($items, $metadata) = $invoiced->Item->all(['per_page' => 3]);
```

```python
items, metadata = client.CatalogItem.list(per_page=3)
```

```java
EntityList<CatalogItem> items = conn.newCatalogItem().listAll();
```

```csharp
var items = item.ListAll();
```

```go
items, err := item.ListAll(nil, nil)
```

> The above command returns JSON structured like this:

```shell
[
  <%= json data.items.object, 1 %>
]
```

```ruby
[
  #<Invoiced::CatalogItem:0x3fdbf95e4d08 id=delivery> JSON: <%= json data.items.object, 1 %>
]
```

```php
[
  Invoiced\Item JSON: <%= json data.items.object, 1 %>
]
```

```python
[
  <CatalogItem id=delivery at 0x3fdbf95e4d08> JSON: <%= json data.items.object, 1 %>
]
```

```java
[
  com.invoiced.entity.CatalogItem@c509a57 JSON: <%= json data.items.object, 1 %>
]
```

```csharp
[
  Invoiced.CatalogItem<delivery> <%= json data.items.object, 1 %>
]
```

```go
[
  <CatalogItem id=delivery at cb8fd57> JSON: <%= json data.items.object, 1 %>
]
```

This endpoint retrieves all items.

### HTTP Request

`GET /catalog_items`

### Query Parameters

Parameter | Description
--------- | -----------
**sort** *string* | Column to sort by, i.e. `name asc`
**filter** *object* | Filter object
**updated_after** *timestamp* | Only gets records updated after the given timestamp